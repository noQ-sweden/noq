# Deployment pipeline for noQ web application
name: noQ - Deployment

on:
  push:
    branches: [ "main" ]

jobs:

  # Verify build of frontend
  build-frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: 18.x

      - name: Install dependencies
        working-directory: frontend/react
        run: npm install

      - name: Build frontend
        working-directory: frontend/react
        run: npm run build

  # Verify build of backend
  build-backend:
    name: Build backend
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build backend
        working-directory: noq-backend/
        run: mvn -B package --file pom.xml -e

  # TODO: Verify Bicep template with --what-if
  
  # Run deployment to dev environment if two previous build steps are successful
  dev-deployment:
    name: Deploy to Development
    needs: [build-frontend, build-backend]
    runs-on: ubuntu-latest
    environment: Development

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
    
      # Authenticate with Azure Cloud
      - name: 'Log into Azure'
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true  

      # Create formatted timestamp to use as deployment name 
      - name: Store current timestamp
        id: date
        run: echo "ts=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
        
      # Provision base infrastructure resources
      - name: Provision base infrastructure
        id: arm
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ vars.AZURE_SUBSCRIPTIONID }}
          scope: subscription
          region: swedencentral
          template: ./infrastructure/noq-infrastructure-main.bicep
          deploymentName: 'noq_main_${{ steps.date.outputs.ts }}'
          parameters: 'envShortName=${{ vars.ENV_SHORTNAME }}'
          failOnStdErr: false

      - name: 'Container Registry Login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ steps.arm.outputs.registryLoginServer }}
          username: ${{ secrets.AZ_SPN_ID }}
          password: ${{ secrets.AZ_SPN_SECRET }}
      
      - name: 'Build and push frontend container image'
        working-directory: frontend/react
        run: |
          docker build . -t ${{ steps.arm.outputs.registryLoginServer }}/frontend/noq-frontend:${{ github.sha }}
          docker push ${{ steps.arm.outputs.registryLoginServer }}/frontend/noq-frontend:${{ github.sha }}
      
      - name: 'Build and push backend container image'
        working-directory: noq-backend
        run: |
          docker build . -t ${{ steps.arm.outputs.registryLoginServer }}/backend/noq-backend:${{ github.sha }}
          docker push ${{ steps.arm.outputs.registryLoginServer }}/backend/noq-backend:${{ github.sha }}

      - name: Get container registry credentials
        id: keyVaultSecrets
        run: | 
          registryUsername=$(az keyvault secret show --name ${{ steps.arm.outputs.registryUsernameSecretName }} --vault-name ${{ steps.arm.outputs.keyVaultName }} --query value)
          echo "::add-mask::$registryUsername"
          echo registryUsername=$registryUsername >> $GITHUB_ENV
          registryPassword=$(az keyvault secret show --name ${{ steps.arm.outputs.registryPwdSecretName }} --vault-name ${{ steps.arm.outputs.keyVaultName }} --query value)
          echo "::add-mask::$registryPassword"
          echo registryPassword=$registryPassword >> $GITHUB_ENV

      # Provision container app for frontend
      - name: Provision frontend container app
        id: frontend
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ vars.AZURE_SUBSCRIPTIONID }}
          scope: subscription
          region: swedencentral
          template: ./infrastructure/noq-container-app.bicep
          deploymentName: 'noq_fe_${{ steps.date.outputs.ts }}'
          parameters: 'registryPassword=${{ env.registryPassword }} registryUsername=${{ env.registryUsername }} registry=${{ steps.arm.outputs.registryLoginServer }} envShortName=${{ vars.ENV_SHORTNAME }} appName="noq-frontend" containerEnvironment=${{ steps.arm.outputs.containerEnvironmentName }} containerImage=${{ steps.arm.outputs.registryLoginServer }}/frontend/noq-frontend:${{ github.sha }}'
          failOnStdErr: false

      # TODO: Provision container app for backend
      - name: Provision backend container app
        id: backend
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ vars.AZURE_SUBSCRIPTIONID }}
          scope: subscription
          region: swedencentral
          template: ./infrastructure/noq-container-app.bicep
          deploymentName: 'noq_be_${{ steps.date.outputs.ts }}'
          parameters: 'registryPassword=${{ env.registryPassword }} registryUsername=${{ env.registryUsername }} registry=${{ steps.arm.outputs.registryLoginServer }} envShortName=${{ vars.ENV_SHORTNAME }} appName="noq-backend" containerEnvironment=${{ steps.arm.outputs.containerEnvironmentName }} containerImage=${{ steps.arm.outputs.registryLoginServer }}/backend/noq-backend:${{ github.sha }}'
          failOnStdErr: false
          