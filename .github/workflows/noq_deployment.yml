# Deployment pipeline for noQ web application
name: noQ - Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  # TODO: Verify Bicep template with --what-if
  
  # Run deployment to dev environment if two previous build steps are successful
  dev-deployment:
    name: Development
    runs-on: ubuntu-latest
    environment: Development

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
    
      # Authenticate with Azure Cloud
      - name: 'Log into Azure'
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true  

      # Create formatted timestamp to use as deployment name 
      - name: Store current timestamp
        id: date
        run: echo "ts=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
        
      # Provision base infrastructure resources
      - name: Provision base infrastructure
        id: arm
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ vars.AZURE_SUBSCRIPTIONID }}
          scope: subscription
          region: swedencentral
          template: ./infrastructure/noq-infrastructure-main.bicep
          deploymentName: 'noq_main_${{ steps.date.outputs.ts }}'
          parameters: 'envShortName=${{ vars.ENV_SHORTNAME }}'
          failOnStdErr: false

      - name: 'Container Registry Login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ steps.arm.outputs.registryLoginServer }}
          username: ${{ secrets.AZ_SPN_ID }}
          password: ${{ secrets.AZ_SPN_SECRET }}
      
      - name: 'Build and push frontend container image'
        working-directory: frontend/react
        run: |
          docker build . -t ${{ steps.arm.outputs.registryLoginServer }}/frontend/noq-frontend:${{ github.sha }}
          docker push ${{ steps.arm.outputs.registryLoginServer }}/frontend/noq-frontend:${{ github.sha }}
      
      # Provision container app for frontend
      - name: Provision frontend container app
        id: frontend
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ vars.AZURE_SUBSCRIPTIONID }}
          scope: subscription
          region: swedencentral
          template: ./infrastructure/noq-container-app.bicep
          deploymentName: 'noq_fe_${{ steps.date.outputs.ts }}'
          parameters: 'envShortName=${{ vars.ENV_SHORTNAME }} appName="noq-frontend" containerEnvironment=${{ steps.arm.outputs.containerEnvironmentName }}'
          failOnStdErr: false      
          